"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[2752],{3881:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>d});var s=r(8101);const n={},o=s.createContext(n);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:t},e.children)}},6788:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"sdk/provider/core/project/contributor-state/classes/ContributorState","title":"ContributorState","description":"Represents the state of a contributor in a project.","source":"@site/docs/sdk/provider/core/project/contributor-state/classes/ContributorState.md","sourceDirName":"sdk/provider/core/project/contributor-state/classes","slug":"/sdk/provider/core/project/contributor-state/classes/ContributorState","permalink":"/docs-site/docs/sdk/provider/core/project/contributor-state/classes/ContributorState","draft":false,"unlisted":false,"editUrl":"https://github.com/Andamio-Platform/docs-site/docs/sdk/provider/core/project/contributor-state/classes/ContributorState.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"provider/core/project/contributor-state","permalink":"/docs-site/docs/sdk/provider/core/project/contributor-state/"},"next":{"title":"provider/core/project/escrow","permalink":"/docs-site/docs/sdk/provider/core/project/escrow/"}}');var n=r(5105),o=r(3881);const i={},d="ContributorState",c={},l=[{value:"Constructors",id:"constructors",level:2},{value:"new ContributorState()",id:"new-contributorstate",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"getAddress()",id:"getaddress",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Throws",id:"throws",level:4},{value:"getUtxos()",id:"getutxos",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws-1",level:4}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"contributorstate",children:"ContributorState"})}),"\n",(0,n.jsx)(t.p,{children:"Represents the state of a contributor in a project."}),"\n",(0,n.jsx)(t.p,{children:"This class provides methods to interact with contributor state on the blockchain,\nsuch as retrieving addresses and UTXOs associated with a project's NFT policy."}),"\n",(0,n.jsx)(t.p,{children:"ContributorState"}),"\n",(0,n.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(t.h3,{id:"new-contributorstate",children:"new ContributorState()"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"new ContributorState(client): ContributorState\n"})}),"\n",(0,n.jsx)(t.p,{children:"Creates a new ContributorState instance."}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"client"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"UtxorpcClient"})}),(0,n.jsx)(t.td,{children:"The UtxorpcClient used to interact with the blockchain."})]})})]}),"\n",(0,n.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs-site/docs/sdk/provider/core/project/contributor-state/classes/ContributorState",children:(0,n.jsx)(t.code,{children:"ContributorState"})})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"getaddress",children:"getAddress()"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"getAddress(projectNftPolicy): Promise<string>\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the contributor address for a specific project."}),"\n",(0,n.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"projectNftPolicy"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"The policy ID of the project NFT."})]})})]}),"\n",(0,n.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Promise"}),"<",(0,n.jsx)(t.code,{children:"string"}),">"]}),"\n",(0,n.jsx)(t.p,{children:"A promise that resolves to the contributor address as a string."}),"\n",(0,n.jsx)(t.h4,{id:"throws",children:"Throws"}),"\n",(0,n.jsx)(t.p,{children:"If the address derivation fails."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"getutxos",children:"getUtxos()"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"getUtxos(projectNftPolicy?, address?): Promise<Utxo[]>\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves UTXOs for a contributor."}),"\n",(0,n.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"projectNftPolicy"}),"?"]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"Optional. The policy ID of the project NFT. Either this or address must be provided."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"address"}),"?"]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"Optional. The contributor's address. If not provided, it will be derived from the projectNftPolicy."})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Promise"}),"<",(0,n.jsx)(t.code,{children:"Utxo"}),"[]>"]}),"\n",(0,n.jsx)(t.p,{children:"A promise that resolves to an array of UTXOs."}),"\n",(0,n.jsx)(t.h4,{id:"throws-1",children:"Throws"}),"\n",(0,n.jsx)(t.p,{children:"If neither projectNftPolicy nor address is provided, or if fetching UTXOs fails."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);