"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[2397],{3881:(e,s,t)=>{t.d(s,{R:()=>d,x:()=>c});var r=t(8101);const n={},i=r.createContext(n);function d(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(i.Provider,{value:s},e.children)}},5592:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"sdk/provider/core/course/assignment-state/classes/AssignmentState","title":"AssignmentState","description":"Manages the state of assignments in a course.","source":"@site/docs/sdk/provider/core/course/assignment-state/classes/AssignmentState.md","sourceDirName":"sdk/provider/core/course/assignment-state/classes","slug":"/sdk/provider/core/course/assignment-state/classes/AssignmentState","permalink":"/docs-site/docs/sdk/provider/core/course/assignment-state/classes/AssignmentState","draft":false,"unlisted":false,"editUrl":"https://github.com/Andamio-Platform/docs-site/docs/sdk/provider/core/course/assignment-state/classes/AssignmentState.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"provider/core/course/assignment-state","permalink":"/docs-site/docs/sdk/provider/core/course/assignment-state/"},"next":{"title":"Course","permalink":"/docs-site/docs/sdk/provider/core/course/classes/Course"}}');var n=t(5105),i=t(3881);const d={},c="AssignmentState",o={},a=[{value:"Constructors",id:"constructors",level:2},{value:"new AssignmentState()",id:"new-assignmentstate",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"getAddress()",id:"getaddress",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Throws",id:"throws",level:4},{value:"getUtxos()",id:"getutxos",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws-1",level:4}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"assignmentstate",children:"AssignmentState"})}),"\n",(0,n.jsx)(s.p,{children:"Manages the state of assignments in a course.\nThis class provides functionality to interact with assignment-related blockchain data."}),"\n",(0,n.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(s.h3,{id:"new-assignmentstate",children:"new AssignmentState()"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"new AssignmentState(client): AssignmentState\n"})}),"\n",(0,n.jsx)(s.p,{children:"Creates a new instance of AssignmentState."}),"\n",(0,n.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"client"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"UtxorpcClient"})}),(0,n.jsx)(s.td,{children:"The UtxorpcClient instance used for blockchain interactions."})]})})]}),"\n",(0,n.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"/docs-site/docs/sdk/provider/core/course/assignment-state/classes/AssignmentState",children:(0,n.jsx)(s.code,{children:"AssignmentState"})})}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"getaddress",children:"getAddress()"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"getAddress(courseNftPolicy): Promise<string>\n"})}),"\n",(0,n.jsx)(s.p,{children:"Derives the blockchain address for a course's assignment validator."}),"\n",(0,n.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"courseNftPolicy"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"The policy ID of the course NFT."})]})})]}),"\n",(0,n.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"Promise"}),"<",(0,n.jsx)(s.code,{children:"string"}),">"]}),"\n",(0,n.jsx)(s.p,{children:"Promise that resolves to the derived address string."}),"\n",(0,n.jsx)(s.h4,{id:"throws",children:"Throws"}),"\n",(0,n.jsx)(s.p,{children:"If address derivation fails."}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"getutxos",children:"getUtxos()"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"getUtxos(courseNftPolicy?, address?): Promise<Utxo[]>\n"})}),"\n",(0,n.jsx)(s.p,{children:"Retrieves UTXOs related to assignments for a specific course."}),"\n",(0,n.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"courseNftPolicy"}),"?"]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"The policy ID of the course NFT. Required if address is not provided."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"address"}),"?"]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"Optional address to fetch UTXOs from. If not provided, derived from courseNftPolicy."})]})]})]}),"\n",(0,n.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"Promise"}),"<",(0,n.jsx)(s.code,{children:"Utxo"}),"[]>"]}),"\n",(0,n.jsx)(s.p,{children:"Promise that resolves to an array of UTXOs."}),"\n",(0,n.jsx)(s.h4,{id:"throws-1",children:"Throws"}),"\n",(0,n.jsx)(s.p,{children:"If neither courseNftPolicy nor address is provided, or if fetching UTXOs fails."})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);